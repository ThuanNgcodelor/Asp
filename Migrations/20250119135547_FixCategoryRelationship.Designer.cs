// <auto-generated />
using System;
using AnimeAsp.Config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AnimeAsp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250119135547_FixCategoryRelationship")]
    partial class FixCategoryRelationship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.1.24081.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AnimeAsp.Models.CategoryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AnimeAsp.Models.EpisodeModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("VideoModelId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VideoModelId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("AnimeAsp.Models.MovieModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("ProductModelId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ProductModelId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("AnimeAsp.Models.ProductModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("productDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("productImage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("productPrice")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("productQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AnimeAsp.Models.VideoModel", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("filesize")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("format")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("resolution")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("CategoryModelMovieModel", b =>
                {
                    b.Property<long>("CategoriesId")
                        .HasColumnType("bigint");

                    b.Property<long>("MoviesId")
                        .HasColumnType("bigint");

                    b.HasKey("CategoriesId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("MovieCategories", (string)null);
                });

            modelBuilder.Entity("CategoryModelProductModel", b =>
                {
                    b.Property<long>("ProductsId")
                        .HasColumnType("bigint");

                    b.Property<long>("categoriesId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductsId", "categoriesId");

                    b.HasIndex("categoriesId");

                    b.ToTable("CategoryModelProductModel");
                });

            modelBuilder.Entity("EpisodeModelMovieModel", b =>
                {
                    b.Property<long>("EpisodesId")
                        .HasColumnType("bigint");

                    b.Property<long>("MoviesId")
                        .HasColumnType("bigint");

                    b.HasKey("EpisodesId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("MovieEpisodes", (string)null);
                });

            modelBuilder.Entity("AnimeAsp.Models.EpisodeModel", b =>
                {
                    b.HasOne("AnimeAsp.Models.VideoModel", null)
                        .WithMany("Episodes")
                        .HasForeignKey("VideoModelId");
                });

            modelBuilder.Entity("AnimeAsp.Models.MovieModel", b =>
                {
                    b.HasOne("AnimeAsp.Models.ProductModel", null)
                        .WithMany("movies")
                        .HasForeignKey("ProductModelId");
                });

            modelBuilder.Entity("AnimeAsp.Models.VideoModel", b =>
                {
                    b.HasOne("AnimeAsp.Models.EpisodeModel", "Episode")
                        .WithOne("Video")
                        .HasForeignKey("AnimeAsp.Models.VideoModel", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Episode");
                });

            modelBuilder.Entity("CategoryModelMovieModel", b =>
                {
                    b.HasOne("AnimeAsp.Models.CategoryModel", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnimeAsp.Models.MovieModel", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CategoryModelProductModel", b =>
                {
                    b.HasOne("AnimeAsp.Models.ProductModel", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnimeAsp.Models.CategoryModel", null)
                        .WithMany()
                        .HasForeignKey("categoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EpisodeModelMovieModel", b =>
                {
                    b.HasOne("AnimeAsp.Models.EpisodeModel", null)
                        .WithMany()
                        .HasForeignKey("EpisodesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AnimeAsp.Models.MovieModel", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnimeAsp.Models.EpisodeModel", b =>
                {
                    b.Navigation("Video")
                        .IsRequired();
                });

            modelBuilder.Entity("AnimeAsp.Models.ProductModel", b =>
                {
                    b.Navigation("movies");
                });

            modelBuilder.Entity("AnimeAsp.Models.VideoModel", b =>
                {
                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
